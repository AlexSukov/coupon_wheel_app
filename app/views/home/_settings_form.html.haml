= form_with(model: setting, local: true) do |form|
  - if setting.errors.any?
    #error_explanation
      %h2
        = pluralize(setting.errors.count, "error")
        prohibited this setting from being saved:
      %ul
        - setting.errors.full_messages.each do |message|
          %li= message

  .section-block
    %h2.home-title General
    .form-group
      .form-title Enable App
      = form.label :enable, class: "switch" do
        = form.check_box :enable, id: :setting_enable
        %span.slider.round
    .form-group.float-container
      .logo-block
        .logo-text
          %h3.home-subtitle Big Logo
          %p.home-info 300x150 px, max 100 kB, PNG/JPEG/GIF image
          %p.home-info Big logo will be shown above title
          = form.label :big_logo, class: "add-image" do
            = image_tag ("AddLogoButton.png")
            = form.file_field :big_logo, id: :setting_big_logo, class: 'form-control',
            onchange: "readURL(this,'.big-logo-wrapper','big-logo')"
        .big-logo-wrapper
          - if setting.big_logo.present?
            = image_tag setting.big_logo, class: "big-logo"
      .logo-block
        .logo-text
          %h3.home-subtitle Small Logo
          %p.home-info 100x100 px, max 100 kB, PNG/JPEG/GIF image
          %p.home-info Small logo will be shown in the center of the wheel
          = form.label :small_logo, class: "add-image" do
            = image_tag ("AddLogoButton.png")
            = form.file_field :small_logo, id: :setting_small_logo, class: 'form-control',
            onchange: "readURL(this,'.small-logo-wrapper','small-logo'); readURL(this,'.canvas-logo','canvas-logo-img');"
        .small-logo-wrapper
          - if setting.small_logo.present?
            = image_tag setting.small_logo, class: "small-logo"

  .section-block
    %h2.home-title Advanced
    %button.home-subtitle{type: 'button', id: 'show-example', 'data-show': 'show'} Show me example of text positioning
    = image_tag ("text-image.jpg"), class: 'text-image'
    .form-group.half
      = form.label :title_text
      = form.text_field :title_text, id: :setting_title_text, class: 'form-control'
    .form-group.half.left
      = form.label :disclaimer_text
      = form.text_area :disclaimer_text, id: :disclaimer_text, class: 'form-control'
    .form-group.half.right
      = form.label :guiding_text
      = form.text_area :guiding_text, id: :setting_guiding_text, class: 'form-control'
    .form-group.half.left
      = form.label :enter_email
      = form.text_field :enter_email, id: :setting_enter_email, class: 'form-control'
    .form-group.half.right
      = form.label :invalid_email_message
      = form.text_field :invalid_email_message, id: :setting_invalid_email_message, class: 'form-control'
    .form-group.half.left
      = form.label :spin_button
      = form.text_field :spin_button, id: :setting_spin_button, class: 'form-control'
    .form-group.half.right
      = form.label :close_button
      = form.text_field :close_button, id: :setting_close_button, class: 'form-control'
    %button.show-advanced{type: 'button'} Show advanced settings
    #advanced-settings{hidden: true}
      .form-group.half.left
        = form.label :winning_title
        = form.text_field :winning_title, id: :setting_winning_title, class: 'form-control'
      .form-group.half.right
        = form.label :winning_text
        = form.text_field :winning_text, id: :setting_winning_text, class: 'form-control'
      .form-group.half.left
        = form.label :discount_code_title
        = form.text_field :discount_code_title, id: :setting_discount_code_title, class: 'form-control'
      .form-group.half.right
        = form.label :continue_button
        = form.text_field :continue_button, id: :setting_continue_button, class: 'form-control'
      .form-group.half.left
        = form.label :copied_message
        = form.text_field :copied_message, id: :setting_copied_message, class: 'form-control'
      .form-group.half.right
        = form.label :reject_discount_button
        = form.text_field :reject_discount_button, id: :setting_reject_discount_button, class: 'form-control'
      .form-group.full.left
        = form.label :free_product_description
        = form.text_area :free_product_description, id: :setting_free_product_description, class: 'form-control'
      .form-group.half.left
        = form.label :free_product_button
        = form.text_field :free_product_button, id: :setting_free_product_button, class: 'form-control'
      .form-group.half.right
        = form.label :free_product_reject
        = form.text_field :free_product_reject, id: :setting_free_product_reject, class: 'form-control'
      .form-group.half.left
        = form.label :discount_coupon_code_bar
        = form.text_field :discount_coupon_code_bar, id: :setting_discount_coupon_code_bar, class: 'form-control'
      .form-group.half.right
        = form.label :close_button_in_bar
        = form.text_field :close_button_in_bar, id: :setting_close_button_in_bar, class: 'form-control'
      %button.close-advanced{type: 'button'} Close advanced settings

  .section-block
    %h2.home-title Colors
    .flex.around
      .row-flex
        -# .form-group
            - theme_options = [ ["Default", 'Default'], ["Madrid", 'Madrid'] ]
            - selected_theme = setting.theme
            .select-title Theme
            = form.select :theme, options_for_select(theme_options, selected_theme), {}, {class: 'form-control custom-select', id: 'setting_theme' }
        .form-group.flex.align-center
          .form-title Background Color
          = form.hidden_field :background_color, id: :setting_background_color, class: 'form-control',
          onchange: "collecting_data_for_preview();"
        .form-group.flex.align-center
          .form-title Font Color
          = form.hidden_field :font_color, id: :setting_font_color, class: 'form-control',
          onchange: "collecting_data_for_preview();"
        .form-group.flex.align-center
          .form-title Bold text and button color
          = form.hidden_field :bold_text_and_button_color, id: :setting_bold_text_and_button_color, class: 'form-control'
      .row-flex
        .form-group.flex.align-center
          .select-title Use special color for each slice
          = form.label :duo_color, id: "duo_color", class: "switch" do
            = form.check_box :duo_color, id: :setting_duo_color, onchange: "collecting_data_for_preview();"
            %span.slider.round
        #duo-color-settings{hidden: setting.duo_color }
          .form-group.flex.align-center
            .form-title Win section color
            = form.hidden_field :win_section_color, id: :setting_win_section_color, class: 'form-control',
            onchange: "collecting_data_for_preview();"
          .form-group.flex.align-center
            .form-title Lose section color
            = form.hidden_field :lose_section_color, id: :setting_lose_section_color, class: 'form-control',
            onchange: "collecting_data_for_preview();"
        %p.home-info#each-slice-color-note{hidden: !setting.duo_color } To change color of each slice use the settings below.
        - if setting.duo_color?
          :css
            .slice-color-td{display: block}
        - else
          :css
            .slice-color-td{display: none}

  .section-block
    %h2.home-title Slices
    %p.home-info Bear in mind, that our wheel will never stop on a losing slice.
    %h3.home-subtitle.float-left Slice type â€“ Free product
    %p.home-info.float-m-left When choosing the Free Product option - please create product with $0 price before
    %h3.home-subtitle{style: 'clear: left;'} In order to save changes to slice you need to press corresponding slice save button with disk icon. Be aware, that pressing on "Save" button will not save changes to your slices.
    %table#slice-container
      %tr
        %th Slice
        %th Type
        %th Slice Name
        %th Discount Code
        %th.slice-color-td Slice Color
        %th Gravity
        %th Probability
        %th Actions
      - slices.each_with_index do |slice, index|
        = render 'slice_form', slice: slice, index: index+1
    %button.create_slice{'data-setting': @settings.id, type: 'button' } Add Slice
    :javascript
      calculate_probability(#{slices.to_json.html_safe})
    %br
    %datalist#suggested_discounts
      - @discounts.each do |discount|
        %option{value: discount.title, 'data-discount-id': discount.id}

  .section-block
    %h2.home-title Preview
    .canvas-container
      .canvas-back
        =image_tag(asset_path('Back-2.png'))
      .canvas-centerpiece
        =image_tag(asset_path('Center.png'))
        .canvas-logo
          -if setting.small_logo.present?
            =image_tag setting.small_logo, class: 'canvas-logo-img'
      .canvas-marker
        =image_tag(asset_path('Marker.png'))
      %canvas#wheel_preview
        Canvas not supported, use another browser.
      :javascript
        wheel_preview(#{setting.to_json.html_safe}, #{slices.to_json.html_safe})

  #discount-container.section-block
    %h2.home-title Discount Codes
    %table#discount-codes
      %tr
        %th Code
        %th Type
        %th Value
        %th Actions
      - @discounts.each_with_index do |discount, index|
        = render 'discount_form', discount: discount, inxed: index+1
    %button.add_discount_code_form{type: 'button' } Add Discount Code
    %br
    %p.home-info Be aware, that discount codes created from this app can be only applied once per customer, and apply to whole cart.
    %p.home-info For more detailed settings go to a Discounts tab on admin panel.


  .section-block
    %h2.home-title Discount code bar
    .form-group.float-container
      .form-title Enable discount code bar
      = form.label :enable_discount_code_bar, class: "switch" do
        = form.check_box :enable_discount_code_bar, id: :setting_enable_discount_code_bar
        %span.slider.round
      %p.home-info Little trick to stimulate the customer to buy as soon as possible. The coupon will not be canceled when the time will end.
    #discount-code-bar-container{hidden: !setting.enable_discount_code_bar }
      .form-group.float-container
        .form-title.time Discount code bar coutdown time:
        = form.number_field :discount_code_bar_countdown_time, id: :setting_discount_code_bar_countdown_time, min: 0, class: 'form-control time-input'
        .form-title.time minutes.
        %br
      .form-group.float-container
        - discount_position_options = [ ["Screen Top", 'Screen Top'], ["Screen Bottom", 'Screen Bottom'], ["Page Top", 'Page Top'], ["Page Bottom", 'Page Bottom']]
        - selected_discount_position = setting.discount_code_bar_position
        .form-title.time Discount code bar position:
        = form.select :discount_code_bar_position, options_for_select(discount_position_options, selected_discount_position), {}, {class: 'form-control custom-select quarter', id: 'setting_discount_code_bar_position' }

  .section-block
    %h2.home-title Progress bar
    .form-group.float-container
      .form-title Enable progress bar
      = form.label :enable_progress_bar, class: "switch" do
        = form.check_box :enable_progress_bar, id: :setting_enable_progress_bar
        %span.slider.round
      %p.home-info Nifty contraption for boosting your conversion rates.
    #progress-bar-container{hidden: !setting.enable_progress_bar }
      .flex.around
        .row-flex
          .form-group
            = form.label :progress_bar_text
            = form.text_field :progress_bar_text, id: :setting_progress_bar_text, class: 'form-control half'
          .form-group
            = form.label :progress_bar_percentage
            = form.number_field :progress_bar_percentage, id: :setting_progress_bar_percentage, min: 0, max: 100, class: 'form-control one-six'
        .row-flex
          .form-group.align-center
            = form.label :progress_bar_color
            = form.hidden_field :progress_bar_color, id: :setting_progress_bar_color, class: 'form-control'
          .form-group
            - progress_position_options = [ ["Under Top Title", 'Under Top Title'], ["Under Main Text", 'Under Main Text'], ["Under Spin Button", 'Under Spin Button'] ]
            - selected_progress_position = setting.progress_bar_position
            = form.label :progress_bar_position
            = form.select :progress_bar_position, options_for_select(progress_position_options, selected_progress_position), {}, {class: 'form-control custom-select one-third', id: 'setting_progress_bar_position' }

  .section-block
    %h2.home-title Show on devices
    .flex.around
      .row-flex
        .form-group
          .form-title Show on desktop computer
          = form.label :show_on_desktop, class: "switch" do
            = form.check_box :show_on_desktop, id: :setting_show_on_desktop
            %span.slider.round
        #desktop-container{hidden: !setting.show_on_desktop}
          .form-group
            .form-title.left-intent On user's leave intent
            = form.label :show_on_desktop_leave_intent, class: "switch" do
              = form.check_box :show_on_desktop_leave_intent, id: :setting_show_on_desktop_leave_intent
              %span.slider.round
            %p.home-info.left-intent When mouse leaves browser's viewport
          .form-group
            .form-title.left-intent Show on desktop automatically
            = form.label :show_on_desktop_after, class: "switch" do
              = form.check_box :show_on_desktop_after, id: :setting_show_on_desktop_after
              %span.slider.round
          .form-group
            .form-title.time.left-intent-big After
            = form.number_field :show_on_desktop_seconds, id: :setting_show_on_desktop_seconds, min: 0, class: 'form-control time-input'
            .form-title.time seconds
      .row-flex
        .form-group
          .form-title Show on tablets and mobile
          = form.label :show_on_mobile, class: "switch" do
            = form.check_box :show_on_mobile, id: :setting_show_on_mobile
            %span.slider.round
        #mobile-container{hidden: !setting.show_on_mobile}
          .form-group
            .form-title.left-intent On user's leave intent
            = form.label :show_on_mobile_leave_intent, class: "switch" do
              = form.check_box :show_on_mobile_leave_intent, id: :setting_show_on_mobile_leave_intent
              %span.slider.round
            %p.home-info.left-intent When user's suddenly scrolls upwards
          .form-group
            .form-title.left-intent Show on mobile automatically
            = form.label :show_on_mobile_after, class: "switch" do
              = form.check_box :show_on_mobile_after, id: :setting_show_on_mobile_after
              %span.slider.round
          .form-group
            .form-title.time.left-intent-big After
            = form.number_field :show_on_mobile_seconds, id: :setting_show_on_mobile_seconds, min: 0, class: 'form-control time-input'
            .form-title.time seconds

  .section-block
    %h2.home-title Pull-out-tab
    .form-group.half.left
      .form-title Show pull out tab
      = form.label :show_pull_out_tab, class: "switch" do
        = form.check_box :show_pull_out_tab, id: :setting_show_pull_out_tab
        %span.slider.round
      %p.home-info Use this if you don't want to show Wheel automatically. User should click on pull out tab to see pop-up.
    #pull-out-tab-container{hidden: !setting.show_pull_out_tab}
      .form-group.half.right
        .logo-text
          %h3.home-subtitle Tab icon
          %p.home-info 64x64 px, max 100 kB, PNG/JPEG/GIF image
          .form-group.logo-text
            - tab_icon_options = [ ['Default 1', 'https://exitwheel.zoomifi.com/tab-icon/tab_icon.png'], ['Default 2', 'https://exitwheel.zoomifi.com/tab-icon/tab_icon_2.png'], ['Custom...', 'Custom'] ]
            - selected_tab_icon = setting.default_tab_icon
            .select-title Choose icon
            = form.select :default_tab_icon, options_for_select(tab_icon_options, selected_tab_icon), {}, {class: 'form-control custom-select one-third', id: 'setting_default_tab_icon'}
            - if setting.default_tab_icon == 'Custom'
              - showTabIcon = true
            - else
              - showTabIcon = false
            = form.label :tab_icon, class: "add-image", id: "custom-tab-icon", hidden: !showTabIcon do
              = image_tag ("AddLogoButton.png")
              = form.file_field :tab_icon, id: :setting_tab_icon, class: 'form-control',
              onchange: "readURL(this,'.tab-icon-wrapper','tab-icon')"
        .tab-icon-wrapper
          - if showTabIcon
            - if setting.tab_icon.present?
              = image_tag setting.tab_icon, class: "tab-icon"
          - else
            = image_tag setting.default_tab_icon, class: "tab-icon"

  .section-block
    %h2.home-title Don't show app
    %p.home-info Choose how often your customers can use Coupon Wheel.
    .form-group.float-container
      .form-title.time Don't show app for
      = form.number_field :do_not_show_app, id: :setting_do_not_show_app, min: 1, class: 'form-control time-input'
      .form-title.time days

  .section-block
    %h2.home-title URL filters
    %p.home-info Choose where to not show your Wheel. If left blank, wheel will be shown on all pages.
    #url_filters{'data-setting-id': setting.id}
      -if setting.url_filters?
        -setting.url_filters.each do |url|
          .url
            = url
            %button.url_delete{'data-url': url, type: 'button' }
    %button.add_url{type: 'button'} Add URL

  .section-block
    %h2.home-title Discount coupon auto apply
    .form-group
      .form-title Enable discount auto apply
      = form.label :discount_coupon_auto_apply, class: "switch" do
        = form.check_box :discount_coupon_auto_apply, id: :setting_discount_coupon_auto_apply
        %span.slider.round
      %p.home-info Auto apply coupon on checkout page. Checkout links don't work?
      %p.home-info Avoid non-alphanumeric characters like % or ! or $ any other weird stuff ( @ # & â€“ [ { } ] : ; ', ? / * ` ~ ^ + = < >) in the discount code name. Especially if your discount code name has multiple words with spaces.

  .section-block
    %h2.home-title Facebook sharer
    .form-group
      .form-title Enable Facebook sharer
      = form.label :facebook_enable, class: "switch" do
        = form.check_box :facebook_enable, id: :setting_facebook_enable
        %span.slider.round
      %p.home-info If customer shares on Facebook allow another spin. Displays when customer clicks on check out after spinning a wheel. Be aware that customer may not actually share your post on Facebook.
    #facebook-container{hidden: !setting.facebook_enable}
      .form-group
        = form.label :facebook_title
        = form.text_field :facebook_title, id: :setting_facebook_title, class: 'form-control'
      .form-group
        = form.label :facebook_desc
        = form.text_field :facebook_desc, id: :setting_facebook_desc, class: 'form-control'
      .form-group
        = form.label :facebook_button
        = form.text_field :facebook_button, id: :setting_facebook_button, class: 'form-control'
      .row-flex
        .form-group.flex.align-center
          .form-title Text color
          = form.hidden_field :facebook_text_color, id: :setting_facebook_text_color, class: 'form-control'
        .form-group.flex.align-center
          .form-title Button text color
          = form.hidden_field :facebook_button_text_color, id: :setting_facebook_button_text_color, class: 'form-control'
        .form-group.flex.align-center
          .form-title Button color
          = form.hidden_field :facebook_button_color, id: :setting_facebook_button_color, class: 'form-control'
      .form-group
        .logo-text
          %h3.home-subtitle Background Image
          %p.home-info 600x400 px, max 500 kB, PNG/JPEG/GIF image
          = form.label :facebook_image, class: "add-image" do
            = image_tag ("AddLogoButton.png")
            = form.file_field :facebook_image, id: :setting_facebook_image, class: 'form-control',
            onchange: "readURL(this,'.facebook-image-wrapper','facebook-image')"
        .facebook-image-wrapper
          - if setting.facebook_image.present?
            = image_tag setting.facebook_image, class: "facebook-image"
      .form-group
        .logo-text
          %h3.home-subtitle Background Image for Mobile
          %p.home-info 300x500 px, max 500 kB, PNG/JPEG/GIF image
          = form.label :facebook_image_mobile, class: "add-image" do
            = image_tag ("AddLogoButton.png")
            = form.file_field :facebook_image_mobile, id: :setting_facebook_image_mobile, class: 'form-control',
            onchange: "readURL(this,'.facebook-image-mobile-wrapper','facebook-image')"
        .facebook-image-mobile-wrapper
          - if setting.facebook_image_mobile.present?
            = image_tag setting.facebook_image_mobile, class: "facebook-image"

  .section-block
    %h2.home-title E-mails Integration
    .flex.around
      .row-flex
        %h3.home-subtitle Mailchimp
        #mailchimp
          .form-group.left-intent
            .form-title Enable Mailchimp integration
            = form.label :mailchimp_enable, class: "switch" do
              = form.check_box :mailchimp_enable, id: :setting_mailchimp_enable
              %span.slider.round
          #mailchimp-container{hidden: !setting.mailchimp_enable}
            %p.home-info
              To find your API Key go to
              %a{href:'https://kb.mailchimp.com/integrations/api-integrations/about-api-keys', class:'mailer-link', target: '_blank'}='official Mailchimp page'
            .form-group.left-intent
              = form.label :mailchimp_api_key
              = form.text_field :mailchimp_api_key, id: :setting_mailchimp_api_key, class: 'form-control two-third'
            -if setting.mailchimp_api_key?
              -if setting.mailchimp_list_id?
                :javascript
                  displayMailchimpList("#{setting.mailchimp_api_key}", "#{setting.mailchimp_list_id}")
            .form-group
              = form.hidden_field :mailchimp_list_id, id: :setting_mailchimp_list_id, class: 'form-control'
      .row-flex
        %h3.home-subtitle Klaviyo
        #klaviyo
          .form-group.left-intent
            .form-title Enable Klaviyo integration
            = form.label :klaviyo_enable, class: "switch" do
              = form.check_box :klaviyo_enable, id: :setting_klaviyo_enable
              %span.slider.round
          #klaviyo-container{hidden: !setting.klaviyo_enable}
            %p.home-info
              To find your API Key go to
              %a{href:'https://help.klaviyo.com/hc/en-us/articles/115005062267-Manage-Your-Account-s-API-Keys', target: '_blank', class:'mailer-link'}='official Klaviyo page'
            .form-group.left-intent
              = form.label :klaviyo_api_key
              = form.text_field :klaviyo_api_key, id: :setting_klaviyo_api_key, class: 'form-control two-third'
            -if setting.klaviyo_api_key?
              -if setting.klaviyo_list_id?
                :javascript
                  displayKlaviyoList("#{setting.klaviyo_api_key}", "#{setting.klaviyo_list_id}")
            .form-group
              = form.hidden_field :klaviyo_list_id, id: :setting_klaviyo_list_id, class: 'form-control'

  .section-block
    %h2.home-title Collected Emails
    %table#collected_emails
      = render 'collected_emails'
    #pagination
      = paginate @collected_emails, params: {controller: 'home', action: 'collected_emails_pagination'}, remote: true
    #page-entries
      = page_entries_info @collected_emails

  .section-block
    .actions
      = form.submit 'Save Settings', id: 'setting_save'
